Given the head of a singly linked list, return the middle node of the linked list.

If there are two middle nodes, return the second middle node.




/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */

int findLen(struct ListNode* root){
    int count=0;
    while(root!=NULL){
        count++;
        root=root->next;
    }
    return count;
}
struct ListNode* middleNode(struct ListNode* head){
	int len=findLen(head);
    len=len/2 +1;
    while(len>1){
        head=head->next;
        len--;
    }
    
    
    return head;
}
